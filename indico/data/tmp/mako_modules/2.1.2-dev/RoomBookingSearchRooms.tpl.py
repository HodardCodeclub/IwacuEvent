# -*- coding:utf-8 -*-
from mako import runtime, filters, cache
UNDEFINED = runtime.UNDEFINED
STOP_RENDERING = runtime.STOP_RENDERING
__M_dict_builtin = dict
__M_locals_builtin = locals
_magic_number = 10
_modified_time = 1528621822.466622
_enable_loop = True
_template_filename = '/home/hodard/dev/indico/src/indico/legacy/webinterface/tpls/RoomBookingSearchRooms.tpl'
_template_uri = 'RoomBookingSearchRooms.tpl'
_source_encoding = 'utf-8'
from indico.util.json import dumps as j
from indico.util.string import encode_if_unicode, sanitize_html
from indico.util.string import render_markdown_utf8 as m
from indico.util.i18n import _
_exports = []


def render_body(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_locals = __M_dict_builtin(pageargs=pageargs)
        url_for = context.get('url_for', UNDEFINED)
        form = context.get('form', UNDEFINED)
        int = context.get('int', UNDEFINED)
        contextHelp = context.get('contextHelp', UNDEFINED)
        inlineContextHelp = context.get('inlineContextHelp', UNDEFINED)
        rooms = context.get('rooms', UNDEFINED)
        equipment_locations = context.get('equipment_locations', UNDEFINED)
        __M_writer = context.writer()
        __M_writer('<!-- CONTEXT HELP DIVS -->\n<div id="tooltipPool" style="display: none">\n  <!-- Choose Button -->\n  <div id="chooseButtonHelp" class="tip">\n    <span>')
        __M_writer(str(encode_if_unicode( _('Black</span> - rooms that <b>do not</b> require confirmation') )))
        __M_writer('<br/>\n    <span class="moderatedRoom">')
        __M_writer(str(encode_if_unicode( _('Orange</span> - rooms that <b>require confirmation') )))
        __M_writer('</b><br />\n    <span class="privateRoom">')
        __M_writer(str(encode_if_unicode( _('Red</span> - rooms not publically bookable') )))
        __M_writer('<br />\n  </div>\n  <!-- Free Search -->\n  <div id="freeSearchHelp" class="tip">\n    ')
        __M_writer(str(encode_if_unicode( _('Type in anything you remember about the room, i.e.') )))
        __M_writer(':\n    <ul>\n      <li class="tip-no-borders"> ')
        __M_writer(str(encode_if_unicode( _('building or room number') )))
        __M_writer('</li>\n      <li class="tip-no-borders"> ')
        __M_writer(str(encode_if_unicode( _('person responsible') )))
        __M_writer('</li>\n      <li class="tip-no-borders"> ')
        __M_writer(str(encode_if_unicode( _('part of comment') )))
        __M_writer('</li>\n      <li class="tip-no-borders"> ')
        __M_writer(str(encode_if_unicode( _('equipment') )))
        __M_writer('</li>\n      <li class="tip-no-borders"> ')
        __M_writer(str(encode_if_unicode( _('room site') )))
        __M_writer('</li>\n      <li class="tip-no-borders"> ')
        __M_writer(str(encode_if_unicode( _('telephone') )))
        __M_writer('</li>\n      <li class="tip-no-borders">...</li>\n    </ul>\n    ')
        __M_writer(str(encode_if_unicode( _('Results will include rooms that have at least one of the specified words somewhere in description.') )))
        __M_writer('\n    <br />\n    ')
        __M_writer(str(encode_if_unicode( _('Examples') )))
        __M_writer(':\n    <ul>\n      <li class="tip-no-borders">Hauser&nbsp;(')
        __M_writer(str(encode_if_unicode( _('name of person responsible') )))
        __M_writer(')</li>\n      <li class="tip-no-borders">513- 31- 28-&nbsp;(')
        __M_writer(str(encode_if_unicode( _('buildings') )))
        __M_writer(')</li>\n      <li class="tip-no-borders">-006 -C19&nbsp;(')
        __M_writer(str(encode_if_unicode( _('rooms') )))
        __M_writer(')</li>\n      <li class="tip-no-borders">prevessin&nbsp;(')
        __M_writer(str(encode_if_unicode( _('site') )))
        __M_writer(')</li>\n    </ul>\n      ')
        __M_writer(str(encode_if_unicode( _('Searching is case-insensitive and concerns all room\'s attributes.') )))
        __M_writer('\n  </div>\n  <!-- Capacity -->\n  <div id="capacityHelp" class="tip">\n    <p class="tip-no-borders">\n      ')
        __M_writer(str(encode_if_unicode( _("""Find only rooms having capacity within 20% range.
           In example for capacity = 20, rooms having capacity 16 - 24
           will be included in searching results.""") )))
        __M_writer('<br />\n    </p>\n    <p class="tip-no-borders">\n      ')
        __M_writer(str(encode_if_unicode( _("""If there are no rooms of capacity within 20% range,
           system will search for greater capacity.""") )))
        __M_writer('\n    </p>\n    <p class="tip-no-borders">\n      ')
        __M_writer(str(encode_if_unicode( _("""Example: for capacity equal 1, system will try to find rooms for
           only one person. This of course fails, so it will
           return rooms with capacity greater than 1.""") )))
        __M_writer('\n    </p>\n  </div>\n  <!-- Availability -->\n  <div id="availabilityHelp" class="tip">\n    <ul>\n      <li class="tip-no-borders">\n        ')
        __M_writer(str(encode_if_unicode( _('Available - the room must be available in the <b>whole</b> period') )))
        __M_writer('\n      </li>\n      <li class="tip-no-borders">\n        ')
        __M_writer(str(encode_if_unicode( _('Booked - the room must be booked <b>any time</b> in the period') )))
        __M_writer('\n      </li>\n      <li class="tip-no-borders">\n        ')
        __M_writer(str(encode_if_unicode( _('Don\'t care - room\'s availability is not checked') )))
        __M_writer('\n      </li>\n    </ul>\n  </div>\n  ')
        runtime._include_file(context, 'CHBookingRepetition.tpl', _template_uri)
        __M_writer('\n</div>\n<!-- END OF CONTEXT HELP DIVS -->\n\n\n<h2 class="page-title">\n    ')
        __M_writer(str(encode_if_unicode( _('Search rooms') )))
        __M_writer('\n</h2>\n\n')
        runtime._include_file(context, 'ErrorList.tpl', _template_uri, errors=form.error_list, msg=_("There are some errors in the data you submitted"))
        __M_writer('\n\n<!-- Choose a room -->\n<h2 class="group-title">\n    <i class="icon-location"></i>\n    ')
        __M_writer(str(encode_if_unicode( _('Check a room') )))
        __M_writer('\n</h2>\n<select name="roomName" id="roomName">\n')
        for room in rooms:
            __M_writer('        <option value="')
            __M_writer(str(encode_if_unicode( url_for('rooms.roomBooking-roomDetails', room) )))
            __M_writer('" class="')
            __M_writer(str(encode_if_unicode( room.kind )))
            __M_writer('">\n            ')
            __M_writer(str(encode_if_unicode( u'{}: &nbsp; {}'.format(room.location_name, room.full_name) )))
            __M_writer('\n        </option>\n')
        __M_writer('</select>\n\n<input class="i-button highlight" type="button" value="')
        __M_writer(str(encode_if_unicode( _('Go to room') )))
        __M_writer('" onclick="location.href = $(\'#roomName\').val(); return false;"/>\n')
        __M_writer(str(encode_if_unicode( contextHelp('chooseButtonHelp') )))
        __M_writer('\n\n<!-- Search for rooms -->\n<div id="searchRooms">\n    <form id="searchRoomsForm" method="post" action="">\n        ')
        __M_writer(str(encode_if_unicode( form.csrf_token() if form.meta.csrf else '' )))
        __M_writer('\n        ')
        __M_writer(str(encode_if_unicode( form.start_dt() )))
        __M_writer('\n        ')
        __M_writer(str(encode_if_unicode( form.end_dt() )))
        __M_writer('\n        <h2 class="group-title">\n            <i class="icon-search"></i>\n            ')
        __M_writer(str(encode_if_unicode( _('Search for a room') )))
        __M_writer('\n        </h2>\n\n        <table width="100%" border="0" cellspacing="0" cellpadding="0">\n            <!-- LOCATION -->\n            <tr>\n                <td class="titleCellTD" style="width: 125px;">\n                    <span class="titleCellFormat">')
        __M_writer(str(encode_if_unicode( _('Location') )))
        __M_writer('</span>\n                </td>\n                <td>\n                    <table width="100%" cellspacing="4px">\n                        <tr>\n                            <td align="left" class="blacktext">\n                                ')
        __M_writer(str(encode_if_unicode( form.location() )))
        __M_writer('\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n\n            <!-- FREE TEXT -->\n            <tr>\n                <td class="titleCellTD" style="width: 125px;">\n                    <span class="titleCellFormat">')
        __M_writer(str(encode_if_unicode( _('Room details') )))
        __M_writer('</span>\n                </td>\n                <td>\n                    <table width="100%" cellspacing="4px">\n                        <tr>\n                            <td align="left" class="blacktext">\n                                ')
        __M_writer(str(encode_if_unicode( form.details(size=30) )))
        __M_writer('\n                                ')
        __M_writer(str(encode_if_unicode( contextHelp('freeSearchHelp') )))
        __M_writer('\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n\n            <!-- AVAILABILITY -->\n            <tr>\n                <td class="titleCellTD" style="width: 125px;">\n                    <span class="titleCellFormat"> ')
        __M_writer(str(encode_if_unicode( _('Availability') )))
        __M_writer('</span>\n                </td>\n                <td>\n                    <table width="100%" cellspacing="4px">\n                        <tr>\n                            <td align="left" class="blacktext">\n                                ')
        __M_writer(str(encode_if_unicode( form.available(label_args={'style': 'font-weight: normal;'}) )))
        __M_writer('\n                                ')
        __M_writer(str(encode_if_unicode( contextHelp('availabilityHelp') )))
        __M_writer('\n                            </td>\n                        </tr>\n                        ')
        runtime._include_file(context, 'RoomBookingPeriodFormOld.tpl', _template_uri)
        __M_writer('\n                        <tr id=\'includePrebookingsTR\'>\n                            <td class="subFieldWidth" align="right" >\n                                <small> ')
        __M_writer(str(encode_if_unicode( _('PRE-Bookings') )))
        __M_writer('</small>\n                            </td>\n                            <td align="left" class="blacktext">\n                                ')
        __M_writer(str(encode_if_unicode( form.include_pre_bookings() )))
        __M_writer('\n                                ')
        __M_writer(str(encode_if_unicode( form.include_pre_bookings.label(style='font-weight: normal;') )))
        __M_writer('\n                                ')
        __M_writer(str(encode_if_unicode( inlineContextHelp(_('Check if you want to avoid conflicts with PRE-bookings. By default conflicts are checked only against confirmed bookings.')) )))
        __M_writer('\n                            </td>\n                        </tr>\n                        <tr id=\'includePendingBlockingsTR\'>\n                            <td class="subFieldWidth" align="right" >\n                                <small>')
        __M_writer(str(encode_if_unicode( _('Blockings') )))
        __M_writer('</small>\n                            </td>\n                            <td align="left" class="blacktext">\n                                ')
        __M_writer(str(encode_if_unicode( form.include_pending_blockings() )))
        __M_writer('\n                                ')
        __M_writer(str(encode_if_unicode( form.include_pending_blockings.label(style='font-weight: normal;') )))
        __M_writer('\n                                ')
        __M_writer(str(encode_if_unicode( inlineContextHelp(_('Check if you want to avoid conflicts with pending blockings. By default conflicts are checked only against confirmed blockings.')) )))
        __M_writer('\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n\n            <!-- CAPACITY -->\n            <tr>\n                <td class="titleCellTD" style="width: 125px;">\n                    <span class="titleCellFormat">')
        __M_writer(str(encode_if_unicode( form.capacity.label(style='font-weight: normal;') )))
        __M_writer('</span>\n                </td>\n                <td align="right">\n                    <table width="100%" cellspacing="4px">\n                        <tr>\n                            <td align="left" class="blacktext">\n                                ')
        __M_writer(str(encode_if_unicode( form.capacity(size=3) )))
        __M_writer('\n                                ')
        __M_writer(str(encode_if_unicode( _('seats') )))
        __M_writer('\n                                ')
        __M_writer(str(encode_if_unicode( contextHelp('capacityHelp') )))
        __M_writer('\n                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n\n            <!-- REQUIRED EQUIPMENT -->\n            <tr id="equipment-search">\n                <td nowrap class="titleCellTD" style="width: 125px;">\n                    <span class="titleCellFormat">')
        __M_writer(str(encode_if_unicode( _("Required equipment") )))
        __M_writer('</span>\n                </td>\n                <td align="right">\n                    <table width="100%" cellspacing="4px">\n                        <tr>\n                            <td align="left" class="blacktext">\n')
        for eq in form.available_equipment:
            __M_writer('                                    <div class="')
            __M_writer(str(encode_if_unicode( 'js-location js-location-{}'.format(equipment_locations[int(eq.data)]) )))
            __M_writer('">\n                                        ')
            __M_writer(str(encode_if_unicode( eq() )))
            __M_writer('\n                                        ')
            __M_writer(str(encode_if_unicode( eq.label(style='font-weight: normal;') )))
            __M_writer('\n                                    </div>\n')
        __M_writer('                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n\n            <tr>\n                <td nowrap class="titleCellTD" style="width: 125px;">\n                    <span class="titleCellFormat">')
        __M_writer(str(encode_if_unicode( _('Special attributes') )))
        __M_writer('</span>\n                </td>\n                <td align="right">\n                    <table width="100%" cellspacing="4px">\n                        <tr>\n                            <td align="left" class="blacktext">\n                                ')
        __M_writer(str(encode_if_unicode( form.is_only_public() )))
        __M_writer('\n                                ')
        __M_writer(str(encode_if_unicode( form.is_only_public.label(style='font-weight: normal;') )))
        __M_writer('\n                                ')
        __M_writer(str(encode_if_unicode( inlineContextHelp(_('Include only publically reservable rooms.')) )))
        __M_writer('\n                                <br>\n                                ')
        __M_writer(str(encode_if_unicode( form.is_auto_confirm() )))
        __M_writer('\n                                ')
        __M_writer(str(encode_if_unicode( form.is_auto_confirm.label(style='font-weight: normal;') )))
        __M_writer('\n                                ')
        __M_writer(str(encode_if_unicode( inlineContextHelp(_('Include only rooms, where bookings are automatically confirmed. This is the case for most rooms.')) )))
        __M_writer('\n')
        if form.is_only_my_rooms:
            __M_writer('                                    <br>\n                                    ')
            __M_writer(str(encode_if_unicode( form.is_only_my_rooms() )))
            __M_writer('\n                                    ')
            __M_writer(str(encode_if_unicode( form.is_only_my_rooms.label(style='font-weight: normal;') )))
            __M_writer('\n                                    ')
            __M_writer(str(encode_if_unicode( inlineContextHelp(_('Include only rooms you are responsible for.')) )))
            __M_writer('\n')
        if form.is_only_active:
            __M_writer('                                    <br>\n                                    ')
            __M_writer(str(encode_if_unicode( form.is_only_active() )))
            __M_writer('\n                                    ')
            __M_writer(str(encode_if_unicode( form.is_only_active.label(style='font-weight: normal;') )))
            __M_writer('\n                                    ')
            __M_writer(str(encode_if_unicode( inlineContextHelp(_('Include only active rooms. <b>This should be checked.</b> Please note that inactive rooms are considered deleted.')) )))
            __M_writer('\n')
        __M_writer('                            </td>\n                        </tr>\n                    </table>\n                </td>\n            </tr>\n\n            <tr>\n                <td colspan="2" style="padding-left:20px">\n                    <button type="send" class="i-button highlight">\n                        <i class="icon-search"></i>\n                        ')
        __M_writer(str(encode_if_unicode( _('Search') )))
        __M_writer('\n                    </button>\n                </td>\n            </tr>\n        </table>\n    </form>\n</div>\n\n<script type="text/javascript">\n\n    // Displays div with dates and hours\n    function display_availability(bool) {\n        $(\'#sdatesTR, #edatesTR, #hoursTR, #repTypeTR, #includePrebookingsTR, #includePendingBlockingsTR\').toggle(bool);\n    }\n    // Reds out the invalid textboxes and returns false if something is invalid.\n    // Returns true if form may be submited.\n    function forms_are_valid(onSubmit) {\n        if (onSubmit != true) {\n            onSubmit = false;\n        }\n\n        // Clean up - make all textboxes white again\n        var searchForm = $(\'#searchRoomsForm\');\n        $(\':input\', searchForm).removeClass(\'invalid\');\n        // Init\n        var isValid = true;\n\n        // Simple search -------------------------------------\n        // Availability\n        if ($(\'input[name="available"]:checked\', searchForm).val() != \'-1\') { // only if NOT "Don\'t care"\n            // validate_period is not defined, wth, apparently the old if condition was never net\n            // isValid = validate_period();\n        }\n        // capacity\n        if ($(\'#capacity\').val().length > 0 && parseInt($(\'#capacity\').val(), 10).toString() == \'NaN\') {\n            $(\'#capacity\').addClass(\'invalid\');\n            isValid = false;\n        }\n\n        // Holidays warning\n        if (isValid && !onSubmit) {\n            var lastDateInfo = searchForm.data(\'lastDateInfo\');\n            var dateInfo = $(\'#sDay, #sMonth, #sYear, #eDay, #eMonth, #eYear\').serialize();\n            if (dateInfo != lastDateInfo) {\n                searchForm.data(\'lastDateInfo\', dateInfo);\n                var holidaysWarning = indicoSource(\'roomBooking.getDateWarning\', searchForm.serializeObject());\n\n                holidaysWarning.state.observe(function(state) {\n                    if (state == SourceState.Loaded) {\n                        $E(\'holidays-warning\').set(holidaysWarning.get());\n                    }\n                });\n            }\n        }\n\n        if (!$(\'#sdate\').val()) {\n            $(\'#sdate\').addClass(\'invalid\');\n            isValid = false;\n        }\n\n        if (!$(\'#edate\').val()) {\n            $(\'#edate\').addClass(\'invalid\');\n            isValid = false;\n        }\n\n        return isValid;\n    }\n\n\n    $(window).on(\'load\', function() {\n        $(\'#searchRoomsForm\').on(\'keyup change\', \':input\', function() {\n            forms_are_valid();\n        }).on(\'submit\', function(e) {\n            if (!forms_are_valid(true)) {\n                e.preventDefault();\n                new AlertPopup($T("Error"), $T("There are errors in the form. Please correct fields with red background.")).open();\n            }\n        });\n\n        if (forms_are_valid()) {\n            set_repeatition_comment();\n        }\n        $(\'#searchRoomsForm input[name="available"]\').change(function() {\n            display_availability(this.value != \'-1\');\n        });\n        display_availability($(\'input[name="available"]:checked\').val() != \'-1\');\n        $(\'#freeSearch\').focus();\n    });\n\n    $(\'#location\').on(\'change\', function() {\n        var locationId = $(this).val();\n        $(\'#equipment-search\').toggle(locationId != \'__None\')\n        $(\'.js-location\').hide().find(\'input:checkbox\').prop(\'checked\', false);\n        $(\'.js-location-\' + locationId).show();\n    }).trigger(\'change\');\n\n</script>\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


"""
__M_BEGIN_METADATA
{"source_encoding": "utf-8", "line_map": {"20": 0, "32": 1, "33": 5, "34": 5, "35": 6, "36": 6, "37": 7, "38": 7, "39": 11, "40": 11, "41": 13, "42": 13, "43": 14, "44": 14, "45": 15, "46": 15, "47": 16, "48": 16, "49": 17, "50": 17, "51": 18, "52": 18, "53": 21, "54": 21, "55": 23, "56": 23, "57": 25, "58": 25, "59": 26, "60": 26, "61": 27, "62": 27, "63": 28, "64": 28, "65": 30, "66": 30, "67": 35, "70": 37, "71": 40, "73": 41, "74": 44, "77": 46, "78": 53, "79": 53, "80": 56, "81": 56, "82": 59, "83": 59, "84": 63, "85": 63, "86": 69, "87": 69, "88": 72, "89": 72, "90": 77, "91": 77, "92": 80, "93": 81, "94": 81, "95": 81, "96": 81, "97": 81, "98": 82, "99": 82, "100": 85, "101": 87, "102": 87, "103": 88, "104": 88, "105": 93, "106": 93, "107": 94, "108": 94, "109": 95, "110": 95, "111": 98, "112": 98, "113": 105, "114": 105, "115": 111, "116": 111, "117": 121, "118": 121, "119": 127, "120": 127, "121": 128, "122": 128, "123": 138, "124": 138, "125": 144, "126": 144, "127": 145, "128": 145, "129": 148, "130": 148, "131": 151, "132": 151, "133": 154, "134": 154, "135": 155, "136": 155, "137": 156, "138": 156, "139": 161, "140": 161, "141": 164, "142": 164, "143": 165, "144": 165, "145": 166, "146": 166, "147": 176, "148": 176, "149": 182, "150": 182, "151": 183, "152": 183, "153": 184, "154": 184, "155": 194, "156": 194, "157": 200, "158": 201, "159": 201, "160": 201, "161": 202, "162": 202, "163": 203, "164": 203, "165": 206, "166": 214, "167": 214, "168": 220, "169": 220, "170": 221, "171": 221, "172": 222, "173": 222, "174": 224, "175": 224, "176": 225, "177": 225, "178": 226, "179": 226, "180": 227, "181": 228, "182": 229, "183": 229, "184": 230, "185": 230, "186": 231, "187": 231, "188": 233, "189": 234, "190": 235, "191": 235, "192": 236, "193": 236, "194": 237, "195": 237, "196": 239, "197": 249, "198": 249, "204": 198}, "uri": "RoomBookingSearchRooms.tpl", "filename": "/home/hodard/dev/indico/src/indico/legacy/webinterface/tpls/RoomBookingSearchRooms.tpl"}
__M_END_METADATA
"""
